name: GitHub Actions Test
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
  workflow_dispatch:

jobs:
  Start:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install pipenv and testing packages
        run: |
          python -m pip install --upgrade pipenv wheel
          pipenv install
      - name: Update .env
        run: |
          sed -i "s|^USERS=.*|USERS=\"${{ secrets.USERS }}\"|" ${{ github.workspace }}/.env
          sed -i "s|^URL=.*|URL=\"${{ secrets.URL }}\"|" ${{ github.workspace }}/.env
          sed -i "s|^URL2=.*|URL2=\"${{ secrets.URL2 }}\"|" ${{ github.workspace }}/.env

      - name: Install Selenium
        run: |
          sudo pip3 install selenium
      - name: ChromeWebDriver
        run: |
          cat <<EOF >> test.py
          from selenium import webdriver
          from selenium.webdriver.chrome.options import Options
          options = Options()
          options.add_argument("--headless")
          options.add_argument('--no-sandbox')
          options.add_argument('--disable-gpu')
          options.add_argument('--disable-dev-shm-usage')
          options.add_argument('disable-infobars')
          options.add_argument("--disable-extensions")
          driver = webdriver.Chrome(chrome_options=options, executable_path='/usr/bin/chromedriver')
          driver.get("http://github.com/")
          print ('Page title is ' + driver.title)
          EOF

          python3 main.py
      
      - name: Run main
        id: main1
        run: pipenv run python main.py
